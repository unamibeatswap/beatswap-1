{"version":3,"file":"index.cjs","sources":["../../src/react-router/VisualEditing.tsx"],"sourcesContent":["import {lazy, Suspense, useSyncExternalStore} from 'react'\nimport type {VisualEditingProps} from './VisualEditingComponent'\n\nconst VisualEditingComponent = lazy(() => import('./VisualEditingComponent'))\n\nconst subcribe = () => () => {}\n\n/**\n * @public\n */\nexport function VisualEditing(props: VisualEditingProps): React.JSX.Element | null {\n  const mounted = useSyncExternalStore(\n    subcribe,\n    () => true,\n    () => false,\n  )\n\n  // Don't render Suspense while hydration, this enables compatibility with React v17 apps\n  // where Suspense where a browser-only API\n  if (!mounted) {\n    return null\n  }\n\n  return (\n    <Suspense fallback={null}>\n      <VisualEditingComponent {...props} />\n    </Suspense>\n  )\n}\n"],"names":["VisualEditingComponent","lazy","subcribe","VisualEditing","props","$","_c","useSyncExternalStore","_temp","_temp2","t0","jsx","Suspense"],"mappings":";;;AAGA,MAAMA,yBAAyBC,WAAK,MAAM,QAAA,QAAA,EAAA,KAAA,WAAA;AAAA,SAAA,QAAO,4CAA0B;AAAA,CAAA,CAAC,GAEtEC,WAAWA,MAAM,MAAM;AAAC;AAKvB,SAAAC,cAAAC,OAAA;AAAAC,QAAAA,IAAAC,uBAAA,CAAA;AAKJ,MAAA,CAJeC,MAAAA,qBAAAL,UAAAM,OAAAC,MAIhB;AAIY,WAAA;AAAAC,MAAAA;AAAAL,SAAAA,SAAAD,SAKVM,KAACC,2BAAA,IAAAC,gBAAA,EAAmB,UAAG,MACrB,UAACD,2BAAA,IAAA,wBAAA,EAA2BP,GAAAA,MAC9B,CAAA,EAAA,CAAA,GAAWC,OAAAD,OAAAC,OAAAK,MAAAA,KAAAL,EAAA,CAAA,GAFXK;AAEW;AAhBR,SAAAD,SAAA;AAAA,SAAA;AAAA;AAAA,SAAAD,QAAA;AAAA,SAAA;AAAA;;;;;;;;"}